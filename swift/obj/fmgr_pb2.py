# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fmgr.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='fmgr.proto',
  package='filemgr',
  syntax='proto3',
  serialized_pb=_b('\n\nfmgr.proto\x12\x07\x66ilemgr\",\n\x12ListPartitionsInfo\x12\x16\n\x0epartition_bits\x18\x01 \x01(\r\">\n\x11ListPartitionInfo\x12\x11\n\tpartition\x18\x01 \x01(\r\x12\x16\n\x0epartition_bits\x18\x02 \x01(\r\"K\n\x0eListSuffixInfo\x12\x11\n\tpartition\x18\x01 \x01(\r\x12\x0e\n\x06suffix\x18\x02 \x01(\x0c\x12\x16\n\x0epartition_bits\x18\x03 \x01(\r\"\x1b\n\nDirEntries\x12\r\n\x05\x65ntry\x18\x01 \x03(\t\"1\n\x0bVolumeIndex\x12\r\n\x05index\x18\x02 \x01(\r\x12\x13\n\x0brepair_tool\x18\x03 \x01(\x08\"q\n\x06Volume\x12\x14\n\x0cvolume_index\x18\x01 \x01(\r\x12\x13\n\x0bvolume_type\x18\x02 \x01(\r\x12\x14\n\x0cvolume_state\x18\x03 \x01(\r\x12\x11\n\tpartition\x18\x04 \x01(\r\x12\x13\n\x0bnext_offset\x18\x05 \x01(\x04\"i\n\x11GetNextOffsetInfo\x12\x14\n\x0cvolume_index\x18\x01 \x01(\r\x12\x13\n\x0bvolume_type\x18\x02 \x01(\r\x12\x14\n\x0cvolume_state\x18\x03 \x01(\r\x12\x13\n\x0brepair_tool\x18\x04 \x01(\x08\"\\\n\x0fListVolumesInfo\x12\x11\n\tpartition\x18\x01 \x01(\r\x12!\n\x04type\x18\x02 \x01(\x0e\x32\x13.filemgr.VolumeType\x12\x13\n\x0brepair_tool\x18\x03 \x01(\x08\"+\n\x07Volumes\x12 \n\x07volumes\x18\x01 \x03(\x0b\x32\x0f.filemgr.Volume\"\"\n\x10VolumeNextOffset\x12\x0e\n\x06offset\x18\x01 \x01(\x04\"\xa5\x01\n\rNewVolumeInfo\x12\x11\n\tpartition\x18\x01 \x01(\r\x12!\n\x04type\x18\x02 \x01(\x0e\x32\x13.filemgr.VolumeType\x12\x14\n\x0cvolume_index\x18\x03 \x01(\r\x12\x0e\n\x06offset\x18\x04 \x01(\x04\x12#\n\x05state\x18\x05 \x01(\x0e\x32\x14.filemgr.VolumeState\x12\x13\n\x0brepair_tool\x18\x06 \x01(\x08\"`\n\x0eNewVolumeState\x12\x14\n\x0cvolume_index\x18\x01 \x01(\r\x12#\n\x05state\x18\x02 \x01(\x0e\x32\x14.filemgr.VolumeState\x12\x13\n\x0brepair_tool\x18\x03 \x01(\x08\"\x10\n\x0eNewVolumeReply\"\x10\n\x0e\x44\x65lObjectReply\"\r\n\x0bRenameReply\"m\n\rNewObjectInfo\x12\x0c\n\x04name\x18\x01 \x01(\x0c\x12\x14\n\x0cvolume_index\x18\x02 \x01(\r\x12\x0e\n\x06offset\x18\x03 \x01(\x04\x12\x13\n\x0bnext_offset\x18\x04 \x01(\x04\x12\x13\n\x0brepair_tool\x18\x05 \x01(\x08\"\x10\n\x0eNewObjectReply\"%\n\x15QuarantinedObjectName\x12\x0c\n\x04name\x18\x01 \x01(\x0c\"/\n\nObjectName\x12\x0c\n\x04name\x18\x01 \x01(\x0c\x12\x13\n\x0brepair_tool\x18\x02 \x01(\x08\"K\n\x0eLoadObjectInfo\x12\x0c\n\x04name\x18\x01 \x01(\x0c\x12\x16\n\x0eis_quarantined\x18\x02 \x01(\x08\x12\x13\n\x0brepair_tool\x18\x03 \x01(\x08\"A\n\nRenameInfo\x12\x0c\n\x04name\x18\x01 \x01(\x0c\x12\x10\n\x08new_name\x18\x02 \x01(\x0c\x12\x13\n\x0brepair_tool\x18\x03 \x01(\x08\"<\n\x06Object\x12\x0c\n\x04name\x18\x01 \x01(\x0c\x12\x14\n\x0cvolume_index\x18\x02 \x01(\r\x12\x0e\n\x06offset\x18\x03 \x01(\x04\"7\n\x13LoadObjectsResponse\x12 \n\x07objects\x18\x01 \x03(\x0b\x32\x0f.filemgr.Object\"3\n\x0cObjectPrefix\x12\x0e\n\x06prefix\x18\x01 \x01(\x0c\x12\x13\n\x0brepair_tool\x18\x02 \x01(\x08\"\x07\n\x05\x45mpty\"\x0e\n\x0cGetStatsInfo\"@\n\x10PartitionContent\x12,\n\x0c\x66ile_entries\x18\x01 \x03(\x0b\x32\x16.filemgr.FullPathEntry\"@\n\rFullPathEntry\x12\x0e\n\x06suffix\x18\x01 \x01(\x0c\x12\r\n\x05ohash\x18\x02 \x01(\x0c\x12\x10\n\x08\x66ilename\x18\x03 \x01(\x0c\"\x1a\n\x07KvState\x12\x0f\n\x07isClean\x18\x01 \x01(\x08\"c\n\x07KVStats\x12*\n\x05stats\x18\x01 \x03(\x0b\x32\x1b.filemgr.KVStats.StatsEntry\x1a,\n\nStatsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x04:\x02\x38\x01*N\n\nVolumeType\x12\x12\n\x0eVOLUME_DEFAULT\x10\x00\x12\x14\n\x10VOLUME_TOMBSTONE\x10\x01\x12\x16\n\x12VOLUME_X_DELETE_AT\x10\x02*R\n\x0bVolumeState\x12\x0c\n\x08STATE_RW\x10\x00\x12\x18\n\x14STATE_COMPACTION_SRC\x10\x01\x12\x1b\n\x17STATE_COMPACTION_TARGET\x10\x02\x32\xa5\x0c\n\x07\x46ileMgr\x12\x43\n\x0eRegisterVolume\x12\x16.filemgr.NewVolumeInfo\x1a\x17.filemgr.NewVolumeReply\"\x00\x12:\n\x10UnregisterVolume\x12\x14.filemgr.VolumeIndex\x1a\x0e.filemgr.Empty\"\x00\x12\x43\n\x0eRegisterObject\x12\x16.filemgr.NewObjectInfo\x1a\x17.filemgr.NewObjectReply\"\x00\x12\x42\n\x10UnregisterObject\x12\x13.filemgr.ObjectName\x1a\x17.filemgr.DelObjectReply\"\x00\x12;\n\x0cRenameObject\x12\x13.filemgr.RenameInfo\x1a\x14.filemgr.RenameReply\"\x00\x12\x41\n\rQuarantineDir\x12\x15.filemgr.ObjectPrefix\x1a\x17.filemgr.DelObjectReply\"\x00\x12\x39\n\x10QuarantineObject\x12\x13.filemgr.ObjectName\x1a\x0e.filemgr.Empty\"\x00\x12;\n\x12UnquarantineObject\x12\x13.filemgr.ObjectName\x1a\x0e.filemgr.Empty\"\x00\x12L\n\x13LoadObjectsByPrefix\x12\x15.filemgr.ObjectPrefix\x1a\x1c.filemgr.LoadObjectsResponse\"\x00\x12;\n\x0bListVolumes\x12\x18.filemgr.ListVolumesInfo\x1a\x10.filemgr.Volumes\"\x00\x12\x34\n\tGetVolume\x12\x14.filemgr.VolumeIndex\x1a\x0f.filemgr.Volume\"\x00\x12\x44\n\x0eListPartitions\x12\x1b.filemgr.ListPartitionsInfo\x1a\x13.filemgr.DirEntries\"\x00\x12\x42\n\rListPartition\x12\x1a.filemgr.ListPartitionInfo\x1a\x13.filemgr.DirEntries\"\x00\x12<\n\nListSuffix\x12\x17.filemgr.ListSuffixInfo\x1a\x13.filemgr.DirEntries\"\x00\x12Q\n\x16ListPartitionRecursive\x12\x1a.filemgr.ListPartitionInfo\x1a\x19.filemgr.PartitionContent\"\x00\x12L\n\x16ListQuarantinedOHashes\x12\x0e.filemgr.Empty\x1a\x1e.filemgr.QuarantinedObjectName\"\x00\x30\x01\x12M\n\x14ListQuarantinedOHash\x12\x15.filemgr.ObjectPrefix\x1a\x1c.filemgr.LoadObjectsResponse\"\x00\x12\x38\n\nLoadObject\x12\x17.filemgr.LoadObjectInfo\x1a\x0f.filemgr.Object\"\x00\x12H\n\rGetNextOffset\x12\x1a.filemgr.GetNextOffsetInfo\x1a\x19.filemgr.VolumeNextOffset\"\x00\x12\x35\n\x08GetStats\x12\x15.filemgr.GetStatsInfo\x1a\x10.filemgr.KVStats\"\x00\x12@\n\x13LoadObjectsByVolume\x12\x14.filemgr.VolumeIndex\x1a\x0f.filemgr.Object\"\x00\x30\x01\x12>\n\x11UpdateVolumeState\x12\x17.filemgr.NewVolumeState\x1a\x0e.filemgr.Empty\"\x00\x12\x30\n\nSetKvState\x12\x10.filemgr.KvState\x1a\x0e.filemgr.Empty\"\x00\x12\x30\n\nGetKvState\x12\x0e.filemgr.Empty\x1a\x10.filemgr.KvState\"\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_VOLUMETYPE = _descriptor.EnumDescriptor(
  name='VolumeType',
  full_name='filemgr.VolumeType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='VOLUME_DEFAULT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VOLUME_TOMBSTONE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VOLUME_X_DELETE_AT', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1823,
  serialized_end=1901,
)
_sym_db.RegisterEnumDescriptor(_VOLUMETYPE)

VolumeType = enum_type_wrapper.EnumTypeWrapper(_VOLUMETYPE)
_VOLUMESTATE = _descriptor.EnumDescriptor(
  name='VolumeState',
  full_name='filemgr.VolumeState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STATE_RW', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATE_COMPACTION_SRC', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STATE_COMPACTION_TARGET', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1903,
  serialized_end=1985,
)
_sym_db.RegisterEnumDescriptor(_VOLUMESTATE)

VolumeState = enum_type_wrapper.EnumTypeWrapper(_VOLUMESTATE)
VOLUME_DEFAULT = 0
VOLUME_TOMBSTONE = 1
VOLUME_X_DELETE_AT = 2
STATE_RW = 0
STATE_COMPACTION_SRC = 1
STATE_COMPACTION_TARGET = 2



_LISTPARTITIONSINFO = _descriptor.Descriptor(
  name='ListPartitionsInfo',
  full_name='filemgr.ListPartitionsInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition_bits', full_name='filemgr.ListPartitionsInfo.partition_bits', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=23,
  serialized_end=67,
)


_LISTPARTITIONINFO = _descriptor.Descriptor(
  name='ListPartitionInfo',
  full_name='filemgr.ListPartitionInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition', full_name='filemgr.ListPartitionInfo.partition', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition_bits', full_name='filemgr.ListPartitionInfo.partition_bits', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=131,
)


_LISTSUFFIXINFO = _descriptor.Descriptor(
  name='ListSuffixInfo',
  full_name='filemgr.ListSuffixInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition', full_name='filemgr.ListSuffixInfo.partition', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='suffix', full_name='filemgr.ListSuffixInfo.suffix', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition_bits', full_name='filemgr.ListSuffixInfo.partition_bits', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=133,
  serialized_end=208,
)


_DIRENTRIES = _descriptor.Descriptor(
  name='DirEntries',
  full_name='filemgr.DirEntries',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='entry', full_name='filemgr.DirEntries.entry', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=210,
  serialized_end=237,
)


_VOLUMEINDEX = _descriptor.Descriptor(
  name='VolumeIndex',
  full_name='filemgr.VolumeIndex',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='index', full_name='filemgr.VolumeIndex.index', index=0,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.VolumeIndex.repair_tool', index=1,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=239,
  serialized_end=288,
)


_VOLUME = _descriptor.Descriptor(
  name='Volume',
  full_name='filemgr.Volume',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_index', full_name='filemgr.Volume.volume_index', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_type', full_name='filemgr.Volume.volume_type', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_state', full_name='filemgr.Volume.volume_state', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='partition', full_name='filemgr.Volume.partition', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_offset', full_name='filemgr.Volume.next_offset', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=290,
  serialized_end=403,
)


_GETNEXTOFFSETINFO = _descriptor.Descriptor(
  name='GetNextOffsetInfo',
  full_name='filemgr.GetNextOffsetInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_index', full_name='filemgr.GetNextOffsetInfo.volume_index', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_type', full_name='filemgr.GetNextOffsetInfo.volume_type', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_state', full_name='filemgr.GetNextOffsetInfo.volume_state', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.GetNextOffsetInfo.repair_tool', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=405,
  serialized_end=510,
)


_LISTVOLUMESINFO = _descriptor.Descriptor(
  name='ListVolumesInfo',
  full_name='filemgr.ListVolumesInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition', full_name='filemgr.ListVolumesInfo.partition', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='filemgr.ListVolumesInfo.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.ListVolumesInfo.repair_tool', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=512,
  serialized_end=604,
)


_VOLUMES = _descriptor.Descriptor(
  name='Volumes',
  full_name='filemgr.Volumes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volumes', full_name='filemgr.Volumes.volumes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=606,
  serialized_end=649,
)


_VOLUMENEXTOFFSET = _descriptor.Descriptor(
  name='VolumeNextOffset',
  full_name='filemgr.VolumeNextOffset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offset', full_name='filemgr.VolumeNextOffset.offset', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=651,
  serialized_end=685,
)


_NEWVOLUMEINFO = _descriptor.Descriptor(
  name='NewVolumeInfo',
  full_name='filemgr.NewVolumeInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='partition', full_name='filemgr.NewVolumeInfo.partition', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='filemgr.NewVolumeInfo.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_index', full_name='filemgr.NewVolumeInfo.volume_index', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='filemgr.NewVolumeInfo.offset', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='filemgr.NewVolumeInfo.state', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.NewVolumeInfo.repair_tool', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=688,
  serialized_end=853,
)


_NEWVOLUMESTATE = _descriptor.Descriptor(
  name='NewVolumeState',
  full_name='filemgr.NewVolumeState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='volume_index', full_name='filemgr.NewVolumeState.volume_index', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='state', full_name='filemgr.NewVolumeState.state', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.NewVolumeState.repair_tool', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=855,
  serialized_end=951,
)


_NEWVOLUMEREPLY = _descriptor.Descriptor(
  name='NewVolumeReply',
  full_name='filemgr.NewVolumeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=953,
  serialized_end=969,
)


_DELOBJECTREPLY = _descriptor.Descriptor(
  name='DelObjectReply',
  full_name='filemgr.DelObjectReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=971,
  serialized_end=987,
)


_RENAMEREPLY = _descriptor.Descriptor(
  name='RenameReply',
  full_name='filemgr.RenameReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=989,
  serialized_end=1002,
)


_NEWOBJECTINFO = _descriptor.Descriptor(
  name='NewObjectInfo',
  full_name='filemgr.NewObjectInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='filemgr.NewObjectInfo.name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_index', full_name='filemgr.NewObjectInfo.volume_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='filemgr.NewObjectInfo.offset', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='next_offset', full_name='filemgr.NewObjectInfo.next_offset', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.NewObjectInfo.repair_tool', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1004,
  serialized_end=1113,
)


_NEWOBJECTREPLY = _descriptor.Descriptor(
  name='NewObjectReply',
  full_name='filemgr.NewObjectReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1115,
  serialized_end=1131,
)


_QUARANTINEDOBJECTNAME = _descriptor.Descriptor(
  name='QuarantinedObjectName',
  full_name='filemgr.QuarantinedObjectName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='filemgr.QuarantinedObjectName.name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1133,
  serialized_end=1170,
)


_OBJECTNAME = _descriptor.Descriptor(
  name='ObjectName',
  full_name='filemgr.ObjectName',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='filemgr.ObjectName.name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.ObjectName.repair_tool', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1172,
  serialized_end=1219,
)


_LOADOBJECTINFO = _descriptor.Descriptor(
  name='LoadObjectInfo',
  full_name='filemgr.LoadObjectInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='filemgr.LoadObjectInfo.name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_quarantined', full_name='filemgr.LoadObjectInfo.is_quarantined', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.LoadObjectInfo.repair_tool', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1221,
  serialized_end=1296,
)


_RENAMEINFO = _descriptor.Descriptor(
  name='RenameInfo',
  full_name='filemgr.RenameInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='filemgr.RenameInfo.name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='new_name', full_name='filemgr.RenameInfo.new_name', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.RenameInfo.repair_tool', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1298,
  serialized_end=1363,
)


_OBJECT = _descriptor.Descriptor(
  name='Object',
  full_name='filemgr.Object',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='filemgr.Object.name', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='volume_index', full_name='filemgr.Object.volume_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='offset', full_name='filemgr.Object.offset', index=2,
      number=3, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1365,
  serialized_end=1425,
)


_LOADOBJECTSRESPONSE = _descriptor.Descriptor(
  name='LoadObjectsResponse',
  full_name='filemgr.LoadObjectsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='objects', full_name='filemgr.LoadObjectsResponse.objects', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1427,
  serialized_end=1482,
)


_OBJECTPREFIX = _descriptor.Descriptor(
  name='ObjectPrefix',
  full_name='filemgr.ObjectPrefix',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='prefix', full_name='filemgr.ObjectPrefix.prefix', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='repair_tool', full_name='filemgr.ObjectPrefix.repair_tool', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1484,
  serialized_end=1535,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='filemgr.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1537,
  serialized_end=1544,
)


_GETSTATSINFO = _descriptor.Descriptor(
  name='GetStatsInfo',
  full_name='filemgr.GetStatsInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1546,
  serialized_end=1560,
)


_PARTITIONCONTENT = _descriptor.Descriptor(
  name='PartitionContent',
  full_name='filemgr.PartitionContent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='file_entries', full_name='filemgr.PartitionContent.file_entries', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1562,
  serialized_end=1626,
)


_FULLPATHENTRY = _descriptor.Descriptor(
  name='FullPathEntry',
  full_name='filemgr.FullPathEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='suffix', full_name='filemgr.FullPathEntry.suffix', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ohash', full_name='filemgr.FullPathEntry.ohash', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filename', full_name='filemgr.FullPathEntry.filename', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1628,
  serialized_end=1692,
)


_KVSTATE = _descriptor.Descriptor(
  name='KvState',
  full_name='filemgr.KvState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='isClean', full_name='filemgr.KvState.isClean', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1694,
  serialized_end=1720,
)


_KVSTATS_STATSENTRY = _descriptor.Descriptor(
  name='StatsEntry',
  full_name='filemgr.KVStats.StatsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='filemgr.KVStats.StatsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='filemgr.KVStats.StatsEntry.value', index=1,
      number=2, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1777,
  serialized_end=1821,
)

_KVSTATS = _descriptor.Descriptor(
  name='KVStats',
  full_name='filemgr.KVStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stats', full_name='filemgr.KVStats.stats', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_KVSTATS_STATSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1722,
  serialized_end=1821,
)

_LISTVOLUMESINFO.fields_by_name['type'].enum_type = _VOLUMETYPE
_VOLUMES.fields_by_name['volumes'].message_type = _VOLUME
_NEWVOLUMEINFO.fields_by_name['type'].enum_type = _VOLUMETYPE
_NEWVOLUMEINFO.fields_by_name['state'].enum_type = _VOLUMESTATE
_NEWVOLUMESTATE.fields_by_name['state'].enum_type = _VOLUMESTATE
_LOADOBJECTSRESPONSE.fields_by_name['objects'].message_type = _OBJECT
_PARTITIONCONTENT.fields_by_name['file_entries'].message_type = _FULLPATHENTRY
_KVSTATS_STATSENTRY.containing_type = _KVSTATS
_KVSTATS.fields_by_name['stats'].message_type = _KVSTATS_STATSENTRY
DESCRIPTOR.message_types_by_name['ListPartitionsInfo'] = _LISTPARTITIONSINFO
DESCRIPTOR.message_types_by_name['ListPartitionInfo'] = _LISTPARTITIONINFO
DESCRIPTOR.message_types_by_name['ListSuffixInfo'] = _LISTSUFFIXINFO
DESCRIPTOR.message_types_by_name['DirEntries'] = _DIRENTRIES
DESCRIPTOR.message_types_by_name['VolumeIndex'] = _VOLUMEINDEX
DESCRIPTOR.message_types_by_name['Volume'] = _VOLUME
DESCRIPTOR.message_types_by_name['GetNextOffsetInfo'] = _GETNEXTOFFSETINFO
DESCRIPTOR.message_types_by_name['ListVolumesInfo'] = _LISTVOLUMESINFO
DESCRIPTOR.message_types_by_name['Volumes'] = _VOLUMES
DESCRIPTOR.message_types_by_name['VolumeNextOffset'] = _VOLUMENEXTOFFSET
DESCRIPTOR.message_types_by_name['NewVolumeInfo'] = _NEWVOLUMEINFO
DESCRIPTOR.message_types_by_name['NewVolumeState'] = _NEWVOLUMESTATE
DESCRIPTOR.message_types_by_name['NewVolumeReply'] = _NEWVOLUMEREPLY
DESCRIPTOR.message_types_by_name['DelObjectReply'] = _DELOBJECTREPLY
DESCRIPTOR.message_types_by_name['RenameReply'] = _RENAMEREPLY
DESCRIPTOR.message_types_by_name['NewObjectInfo'] = _NEWOBJECTINFO
DESCRIPTOR.message_types_by_name['NewObjectReply'] = _NEWOBJECTREPLY
DESCRIPTOR.message_types_by_name['QuarantinedObjectName'] = _QUARANTINEDOBJECTNAME
DESCRIPTOR.message_types_by_name['ObjectName'] = _OBJECTNAME
DESCRIPTOR.message_types_by_name['LoadObjectInfo'] = _LOADOBJECTINFO
DESCRIPTOR.message_types_by_name['RenameInfo'] = _RENAMEINFO
DESCRIPTOR.message_types_by_name['Object'] = _OBJECT
DESCRIPTOR.message_types_by_name['LoadObjectsResponse'] = _LOADOBJECTSRESPONSE
DESCRIPTOR.message_types_by_name['ObjectPrefix'] = _OBJECTPREFIX
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
DESCRIPTOR.message_types_by_name['GetStatsInfo'] = _GETSTATSINFO
DESCRIPTOR.message_types_by_name['PartitionContent'] = _PARTITIONCONTENT
DESCRIPTOR.message_types_by_name['FullPathEntry'] = _FULLPATHENTRY
DESCRIPTOR.message_types_by_name['KvState'] = _KVSTATE
DESCRIPTOR.message_types_by_name['KVStats'] = _KVSTATS
DESCRIPTOR.enum_types_by_name['VolumeType'] = _VOLUMETYPE
DESCRIPTOR.enum_types_by_name['VolumeState'] = _VOLUMESTATE

ListPartitionsInfo = _reflection.GeneratedProtocolMessageType('ListPartitionsInfo', (_message.Message,), dict(
  DESCRIPTOR = _LISTPARTITIONSINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.ListPartitionsInfo)
  ))
_sym_db.RegisterMessage(ListPartitionsInfo)

ListPartitionInfo = _reflection.GeneratedProtocolMessageType('ListPartitionInfo', (_message.Message,), dict(
  DESCRIPTOR = _LISTPARTITIONINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.ListPartitionInfo)
  ))
_sym_db.RegisterMessage(ListPartitionInfo)

ListSuffixInfo = _reflection.GeneratedProtocolMessageType('ListSuffixInfo', (_message.Message,), dict(
  DESCRIPTOR = _LISTSUFFIXINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.ListSuffixInfo)
  ))
_sym_db.RegisterMessage(ListSuffixInfo)

DirEntries = _reflection.GeneratedProtocolMessageType('DirEntries', (_message.Message,), dict(
  DESCRIPTOR = _DIRENTRIES,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.DirEntries)
  ))
_sym_db.RegisterMessage(DirEntries)

VolumeIndex = _reflection.GeneratedProtocolMessageType('VolumeIndex', (_message.Message,), dict(
  DESCRIPTOR = _VOLUMEINDEX,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.VolumeIndex)
  ))
_sym_db.RegisterMessage(VolumeIndex)

Volume = _reflection.GeneratedProtocolMessageType('Volume', (_message.Message,), dict(
  DESCRIPTOR = _VOLUME,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.Volume)
  ))
_sym_db.RegisterMessage(Volume)

GetNextOffsetInfo = _reflection.GeneratedProtocolMessageType('GetNextOffsetInfo', (_message.Message,), dict(
  DESCRIPTOR = _GETNEXTOFFSETINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.GetNextOffsetInfo)
  ))
_sym_db.RegisterMessage(GetNextOffsetInfo)

ListVolumesInfo = _reflection.GeneratedProtocolMessageType('ListVolumesInfo', (_message.Message,), dict(
  DESCRIPTOR = _LISTVOLUMESINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.ListVolumesInfo)
  ))
_sym_db.RegisterMessage(ListVolumesInfo)

Volumes = _reflection.GeneratedProtocolMessageType('Volumes', (_message.Message,), dict(
  DESCRIPTOR = _VOLUMES,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.Volumes)
  ))
_sym_db.RegisterMessage(Volumes)

VolumeNextOffset = _reflection.GeneratedProtocolMessageType('VolumeNextOffset', (_message.Message,), dict(
  DESCRIPTOR = _VOLUMENEXTOFFSET,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.VolumeNextOffset)
  ))
_sym_db.RegisterMessage(VolumeNextOffset)

NewVolumeInfo = _reflection.GeneratedProtocolMessageType('NewVolumeInfo', (_message.Message,), dict(
  DESCRIPTOR = _NEWVOLUMEINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.NewVolumeInfo)
  ))
_sym_db.RegisterMessage(NewVolumeInfo)

NewVolumeState = _reflection.GeneratedProtocolMessageType('NewVolumeState', (_message.Message,), dict(
  DESCRIPTOR = _NEWVOLUMESTATE,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.NewVolumeState)
  ))
_sym_db.RegisterMessage(NewVolumeState)

NewVolumeReply = _reflection.GeneratedProtocolMessageType('NewVolumeReply', (_message.Message,), dict(
  DESCRIPTOR = _NEWVOLUMEREPLY,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.NewVolumeReply)
  ))
_sym_db.RegisterMessage(NewVolumeReply)

DelObjectReply = _reflection.GeneratedProtocolMessageType('DelObjectReply', (_message.Message,), dict(
  DESCRIPTOR = _DELOBJECTREPLY,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.DelObjectReply)
  ))
_sym_db.RegisterMessage(DelObjectReply)

RenameReply = _reflection.GeneratedProtocolMessageType('RenameReply', (_message.Message,), dict(
  DESCRIPTOR = _RENAMEREPLY,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.RenameReply)
  ))
_sym_db.RegisterMessage(RenameReply)

NewObjectInfo = _reflection.GeneratedProtocolMessageType('NewObjectInfo', (_message.Message,), dict(
  DESCRIPTOR = _NEWOBJECTINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.NewObjectInfo)
  ))
_sym_db.RegisterMessage(NewObjectInfo)

NewObjectReply = _reflection.GeneratedProtocolMessageType('NewObjectReply', (_message.Message,), dict(
  DESCRIPTOR = _NEWOBJECTREPLY,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.NewObjectReply)
  ))
_sym_db.RegisterMessage(NewObjectReply)

QuarantinedObjectName = _reflection.GeneratedProtocolMessageType('QuarantinedObjectName', (_message.Message,), dict(
  DESCRIPTOR = _QUARANTINEDOBJECTNAME,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.QuarantinedObjectName)
  ))
_sym_db.RegisterMessage(QuarantinedObjectName)

ObjectName = _reflection.GeneratedProtocolMessageType('ObjectName', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTNAME,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.ObjectName)
  ))
_sym_db.RegisterMessage(ObjectName)

LoadObjectInfo = _reflection.GeneratedProtocolMessageType('LoadObjectInfo', (_message.Message,), dict(
  DESCRIPTOR = _LOADOBJECTINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.LoadObjectInfo)
  ))
_sym_db.RegisterMessage(LoadObjectInfo)

RenameInfo = _reflection.GeneratedProtocolMessageType('RenameInfo', (_message.Message,), dict(
  DESCRIPTOR = _RENAMEINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.RenameInfo)
  ))
_sym_db.RegisterMessage(RenameInfo)

Object = _reflection.GeneratedProtocolMessageType('Object', (_message.Message,), dict(
  DESCRIPTOR = _OBJECT,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.Object)
  ))
_sym_db.RegisterMessage(Object)

LoadObjectsResponse = _reflection.GeneratedProtocolMessageType('LoadObjectsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LOADOBJECTSRESPONSE,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.LoadObjectsResponse)
  ))
_sym_db.RegisterMessage(LoadObjectsResponse)

ObjectPrefix = _reflection.GeneratedProtocolMessageType('ObjectPrefix', (_message.Message,), dict(
  DESCRIPTOR = _OBJECTPREFIX,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.ObjectPrefix)
  ))
_sym_db.RegisterMessage(ObjectPrefix)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), dict(
  DESCRIPTOR = _EMPTY,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.Empty)
  ))
_sym_db.RegisterMessage(Empty)

GetStatsInfo = _reflection.GeneratedProtocolMessageType('GetStatsInfo', (_message.Message,), dict(
  DESCRIPTOR = _GETSTATSINFO,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.GetStatsInfo)
  ))
_sym_db.RegisterMessage(GetStatsInfo)

PartitionContent = _reflection.GeneratedProtocolMessageType('PartitionContent', (_message.Message,), dict(
  DESCRIPTOR = _PARTITIONCONTENT,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.PartitionContent)
  ))
_sym_db.RegisterMessage(PartitionContent)

FullPathEntry = _reflection.GeneratedProtocolMessageType('FullPathEntry', (_message.Message,), dict(
  DESCRIPTOR = _FULLPATHENTRY,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.FullPathEntry)
  ))
_sym_db.RegisterMessage(FullPathEntry)

KvState = _reflection.GeneratedProtocolMessageType('KvState', (_message.Message,), dict(
  DESCRIPTOR = _KVSTATE,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.KvState)
  ))
_sym_db.RegisterMessage(KvState)

KVStats = _reflection.GeneratedProtocolMessageType('KVStats', (_message.Message,), dict(

  StatsEntry = _reflection.GeneratedProtocolMessageType('StatsEntry', (_message.Message,), dict(
    DESCRIPTOR = _KVSTATS_STATSENTRY,
    __module__ = 'fmgr_pb2'
    # @@protoc_insertion_point(class_scope:filemgr.KVStats.StatsEntry)
    ))
  ,
  DESCRIPTOR = _KVSTATS,
  __module__ = 'fmgr_pb2'
  # @@protoc_insertion_point(class_scope:filemgr.KVStats)
  ))
_sym_db.RegisterMessage(KVStats)
_sym_db.RegisterMessage(KVStats.StatsEntry)


_KVSTATS_STATSENTRY.has_options = True
_KVSTATS_STATSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class FileMgrStub(object):
    """Python: python -m grpc.tools.protoc -I. --python_out=. --grpc_python_out=. fmgr.proto
    Golang : protoc -I proto proto/fmgr.proto --go_out=plugins=grpc:proto

    The FileMgr service definition.
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.RegisterVolume = channel.unary_unary(
          '/filemgr.FileMgr/RegisterVolume',
          request_serializer=NewVolumeInfo.SerializeToString,
          response_deserializer=NewVolumeReply.FromString,
          )
      self.UnregisterVolume = channel.unary_unary(
          '/filemgr.FileMgr/UnregisterVolume',
          request_serializer=VolumeIndex.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.RegisterObject = channel.unary_unary(
          '/filemgr.FileMgr/RegisterObject',
          request_serializer=NewObjectInfo.SerializeToString,
          response_deserializer=NewObjectReply.FromString,
          )
      self.UnregisterObject = channel.unary_unary(
          '/filemgr.FileMgr/UnregisterObject',
          request_serializer=ObjectName.SerializeToString,
          response_deserializer=DelObjectReply.FromString,
          )
      self.RenameObject = channel.unary_unary(
          '/filemgr.FileMgr/RenameObject',
          request_serializer=RenameInfo.SerializeToString,
          response_deserializer=RenameReply.FromString,
          )
      self.QuarantineDir = channel.unary_unary(
          '/filemgr.FileMgr/QuarantineDir',
          request_serializer=ObjectPrefix.SerializeToString,
          response_deserializer=DelObjectReply.FromString,
          )
      self.QuarantineObject = channel.unary_unary(
          '/filemgr.FileMgr/QuarantineObject',
          request_serializer=ObjectName.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.UnquarantineObject = channel.unary_unary(
          '/filemgr.FileMgr/UnquarantineObject',
          request_serializer=ObjectName.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.LoadObjectsByPrefix = channel.unary_unary(
          '/filemgr.FileMgr/LoadObjectsByPrefix',
          request_serializer=ObjectPrefix.SerializeToString,
          response_deserializer=LoadObjectsResponse.FromString,
          )
      self.ListVolumes = channel.unary_unary(
          '/filemgr.FileMgr/ListVolumes',
          request_serializer=ListVolumesInfo.SerializeToString,
          response_deserializer=Volumes.FromString,
          )
      self.GetVolume = channel.unary_unary(
          '/filemgr.FileMgr/GetVolume',
          request_serializer=VolumeIndex.SerializeToString,
          response_deserializer=Volume.FromString,
          )
      self.ListPartitions = channel.unary_unary(
          '/filemgr.FileMgr/ListPartitions',
          request_serializer=ListPartitionsInfo.SerializeToString,
          response_deserializer=DirEntries.FromString,
          )
      self.ListPartition = channel.unary_unary(
          '/filemgr.FileMgr/ListPartition',
          request_serializer=ListPartitionInfo.SerializeToString,
          response_deserializer=DirEntries.FromString,
          )
      self.ListSuffix = channel.unary_unary(
          '/filemgr.FileMgr/ListSuffix',
          request_serializer=ListSuffixInfo.SerializeToString,
          response_deserializer=DirEntries.FromString,
          )
      self.ListPartitionRecursive = channel.unary_unary(
          '/filemgr.FileMgr/ListPartitionRecursive',
          request_serializer=ListPartitionInfo.SerializeToString,
          response_deserializer=PartitionContent.FromString,
          )
      self.ListQuarantinedOHashes = channel.unary_stream(
          '/filemgr.FileMgr/ListQuarantinedOHashes',
          request_serializer=Empty.SerializeToString,
          response_deserializer=QuarantinedObjectName.FromString,
          )
      self.ListQuarantinedOHash = channel.unary_unary(
          '/filemgr.FileMgr/ListQuarantinedOHash',
          request_serializer=ObjectPrefix.SerializeToString,
          response_deserializer=LoadObjectsResponse.FromString,
          )
      self.LoadObject = channel.unary_unary(
          '/filemgr.FileMgr/LoadObject',
          request_serializer=LoadObjectInfo.SerializeToString,
          response_deserializer=Object.FromString,
          )
      self.GetNextOffset = channel.unary_unary(
          '/filemgr.FileMgr/GetNextOffset',
          request_serializer=GetNextOffsetInfo.SerializeToString,
          response_deserializer=VolumeNextOffset.FromString,
          )
      self.GetStats = channel.unary_unary(
          '/filemgr.FileMgr/GetStats',
          request_serializer=GetStatsInfo.SerializeToString,
          response_deserializer=KVStats.FromString,
          )
      self.LoadObjectsByVolume = channel.unary_stream(
          '/filemgr.FileMgr/LoadObjectsByVolume',
          request_serializer=VolumeIndex.SerializeToString,
          response_deserializer=Object.FromString,
          )
      self.UpdateVolumeState = channel.unary_unary(
          '/filemgr.FileMgr/UpdateVolumeState',
          request_serializer=NewVolumeState.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.SetKvState = channel.unary_unary(
          '/filemgr.FileMgr/SetKvState',
          request_serializer=KvState.SerializeToString,
          response_deserializer=Empty.FromString,
          )
      self.GetKvState = channel.unary_unary(
          '/filemgr.FileMgr/GetKvState',
          request_serializer=Empty.SerializeToString,
          response_deserializer=KvState.FromString,
          )


  class FileMgrServicer(object):
    """Python: python -m grpc.tools.protoc -I. --python_out=. --grpc_python_out=. fmgr.proto
    Golang : protoc -I proto proto/fmgr.proto --go_out=plugins=grpc:proto

    The FileMgr service definition.
    """

    def RegisterVolume(self, request, context):
      """Register a new Volume
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnregisterVolume(self, request, context):
      """Unregister a Volume
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RegisterObject(self, request, context):
      """Register a new object
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnregisterObject(self, request, context):
      """Unregister an object
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RenameObject(self, request, context):
      """Rename an object
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def QuarantineDir(self, request, context):
      """Quarantine a "directory" (all objects "below" ohash)
      DEPRECATED
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def QuarantineObject(self, request, context):
      """Quarantine an object
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UnquarantineObject(self, request, context):
      """Unquarantine an object
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def LoadObjectsByPrefix(self, request, context):
      """Get array of object locations
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListVolumes(self, request, context):
      """List Volumes
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetVolume(self, request, context):
      """Get Volume by index
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListPartitions(self, request, context):
      """List partitions
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListPartition(self, request, context):
      """List suffixes within partition
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListSuffix(self, request, context):
      """List object hashes within partition/suffix
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListPartitionRecursive(self, request, context):
      """Recursively list the partition content, down to files
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListQuarantinedOHashes(self, request, context):
      """List quarantined objects. This may be very large, so use a stream (no eventlet)
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListQuarantinedOHash(self, request, context):
      """List files within a quarantined object (ohash)
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def LoadObject(self, request, context):
      """TBD: define a ListOhash and deprecate LoadObjectsByPrefix

      Get object
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetNextOffset(self, request, context):
      """Get next offset to write to in a volume
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
      """Get KVStats
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def LoadObjectsByVolume(self, request, context):
      """List objects per volume - used for compaction (no eventlet, ok to use stream)
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def UpdateVolumeState(self, request, context):
      """Update Volume state
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetKvState(self, request, context):
      """Set state (clean: in sync with the volumes)
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetKvState(self, request, context):
      """Get state (clean: in sync with the volumes)
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_FileMgrServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'RegisterVolume': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterVolume,
            request_deserializer=NewVolumeInfo.FromString,
            response_serializer=NewVolumeReply.SerializeToString,
        ),
        'UnregisterVolume': grpc.unary_unary_rpc_method_handler(
            servicer.UnregisterVolume,
            request_deserializer=VolumeIndex.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'RegisterObject': grpc.unary_unary_rpc_method_handler(
            servicer.RegisterObject,
            request_deserializer=NewObjectInfo.FromString,
            response_serializer=NewObjectReply.SerializeToString,
        ),
        'UnregisterObject': grpc.unary_unary_rpc_method_handler(
            servicer.UnregisterObject,
            request_deserializer=ObjectName.FromString,
            response_serializer=DelObjectReply.SerializeToString,
        ),
        'RenameObject': grpc.unary_unary_rpc_method_handler(
            servicer.RenameObject,
            request_deserializer=RenameInfo.FromString,
            response_serializer=RenameReply.SerializeToString,
        ),
        'QuarantineDir': grpc.unary_unary_rpc_method_handler(
            servicer.QuarantineDir,
            request_deserializer=ObjectPrefix.FromString,
            response_serializer=DelObjectReply.SerializeToString,
        ),
        'QuarantineObject': grpc.unary_unary_rpc_method_handler(
            servicer.QuarantineObject,
            request_deserializer=ObjectName.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'UnquarantineObject': grpc.unary_unary_rpc_method_handler(
            servicer.UnquarantineObject,
            request_deserializer=ObjectName.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'LoadObjectsByPrefix': grpc.unary_unary_rpc_method_handler(
            servicer.LoadObjectsByPrefix,
            request_deserializer=ObjectPrefix.FromString,
            response_serializer=LoadObjectsResponse.SerializeToString,
        ),
        'ListVolumes': grpc.unary_unary_rpc_method_handler(
            servicer.ListVolumes,
            request_deserializer=ListVolumesInfo.FromString,
            response_serializer=Volumes.SerializeToString,
        ),
        'GetVolume': grpc.unary_unary_rpc_method_handler(
            servicer.GetVolume,
            request_deserializer=VolumeIndex.FromString,
            response_serializer=Volume.SerializeToString,
        ),
        'ListPartitions': grpc.unary_unary_rpc_method_handler(
            servicer.ListPartitions,
            request_deserializer=ListPartitionsInfo.FromString,
            response_serializer=DirEntries.SerializeToString,
        ),
        'ListPartition': grpc.unary_unary_rpc_method_handler(
            servicer.ListPartition,
            request_deserializer=ListPartitionInfo.FromString,
            response_serializer=DirEntries.SerializeToString,
        ),
        'ListSuffix': grpc.unary_unary_rpc_method_handler(
            servicer.ListSuffix,
            request_deserializer=ListSuffixInfo.FromString,
            response_serializer=DirEntries.SerializeToString,
        ),
        'ListPartitionRecursive': grpc.unary_unary_rpc_method_handler(
            servicer.ListPartitionRecursive,
            request_deserializer=ListPartitionInfo.FromString,
            response_serializer=PartitionContent.SerializeToString,
        ),
        'ListQuarantinedOHashes': grpc.unary_stream_rpc_method_handler(
            servicer.ListQuarantinedOHashes,
            request_deserializer=Empty.FromString,
            response_serializer=QuarantinedObjectName.SerializeToString,
        ),
        'ListQuarantinedOHash': grpc.unary_unary_rpc_method_handler(
            servicer.ListQuarantinedOHash,
            request_deserializer=ObjectPrefix.FromString,
            response_serializer=LoadObjectsResponse.SerializeToString,
        ),
        'LoadObject': grpc.unary_unary_rpc_method_handler(
            servicer.LoadObject,
            request_deserializer=LoadObjectInfo.FromString,
            response_serializer=Object.SerializeToString,
        ),
        'GetNextOffset': grpc.unary_unary_rpc_method_handler(
            servicer.GetNextOffset,
            request_deserializer=GetNextOffsetInfo.FromString,
            response_serializer=VolumeNextOffset.SerializeToString,
        ),
        'GetStats': grpc.unary_unary_rpc_method_handler(
            servicer.GetStats,
            request_deserializer=GetStatsInfo.FromString,
            response_serializer=KVStats.SerializeToString,
        ),
        'LoadObjectsByVolume': grpc.unary_stream_rpc_method_handler(
            servicer.LoadObjectsByVolume,
            request_deserializer=VolumeIndex.FromString,
            response_serializer=Object.SerializeToString,
        ),
        'UpdateVolumeState': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateVolumeState,
            request_deserializer=NewVolumeState.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'SetKvState': grpc.unary_unary_rpc_method_handler(
            servicer.SetKvState,
            request_deserializer=KvState.FromString,
            response_serializer=Empty.SerializeToString,
        ),
        'GetKvState': grpc.unary_unary_rpc_method_handler(
            servicer.GetKvState,
            request_deserializer=Empty.FromString,
            response_serializer=KvState.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'filemgr.FileMgr', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaFileMgrServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Python: python -m grpc.tools.protoc -I. --python_out=. --grpc_python_out=. fmgr.proto
    Golang : protoc -I proto proto/fmgr.proto --go_out=plugins=grpc:proto

    The FileMgr service definition.
    """
    def RegisterVolume(self, request, context):
      """Register a new Volume
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnregisterVolume(self, request, context):
      """Unregister a Volume
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RegisterObject(self, request, context):
      """Register a new object
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnregisterObject(self, request, context):
      """Unregister an object
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RenameObject(self, request, context):
      """Rename an object
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def QuarantineDir(self, request, context):
      """Quarantine a "directory" (all objects "below" ohash)
      DEPRECATED
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def QuarantineObject(self, request, context):
      """Quarantine an object
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UnquarantineObject(self, request, context):
      """Unquarantine an object
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def LoadObjectsByPrefix(self, request, context):
      """Get array of object locations
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListVolumes(self, request, context):
      """List Volumes
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetVolume(self, request, context):
      """Get Volume by index
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListPartitions(self, request, context):
      """List partitions
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListPartition(self, request, context):
      """List suffixes within partition
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListSuffix(self, request, context):
      """List object hashes within partition/suffix
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListPartitionRecursive(self, request, context):
      """Recursively list the partition content, down to files
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListQuarantinedOHashes(self, request, context):
      """List quarantined objects. This may be very large, so use a stream (no eventlet)
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListQuarantinedOHash(self, request, context):
      """List files within a quarantined object (ohash)
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def LoadObject(self, request, context):
      """TBD: define a ListOhash and deprecate LoadObjectsByPrefix

      Get object
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetNextOffset(self, request, context):
      """Get next offset to write to in a volume
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetStats(self, request, context):
      """Get KVStats
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def LoadObjectsByVolume(self, request, context):
      """List objects per volume - used for compaction (no eventlet, ok to use stream)
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def UpdateVolumeState(self, request, context):
      """Update Volume state
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetKvState(self, request, context):
      """Set state (clean: in sync with the volumes)
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetKvState(self, request, context):
      """Get state (clean: in sync with the volumes)
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaFileMgrStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Python: python -m grpc.tools.protoc -I. --python_out=. --grpc_python_out=. fmgr.proto
    Golang : protoc -I proto proto/fmgr.proto --go_out=plugins=grpc:proto

    The FileMgr service definition.
    """
    def RegisterVolume(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Register a new Volume
      """
      raise NotImplementedError()
    RegisterVolume.future = None
    def UnregisterVolume(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Unregister a Volume
      """
      raise NotImplementedError()
    UnregisterVolume.future = None
    def RegisterObject(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Register a new object
      """
      raise NotImplementedError()
    RegisterObject.future = None
    def UnregisterObject(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Unregister an object
      """
      raise NotImplementedError()
    UnregisterObject.future = None
    def RenameObject(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Rename an object
      """
      raise NotImplementedError()
    RenameObject.future = None
    def QuarantineDir(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Quarantine a "directory" (all objects "below" ohash)
      DEPRECATED
      """
      raise NotImplementedError()
    QuarantineDir.future = None
    def QuarantineObject(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Quarantine an object
      """
      raise NotImplementedError()
    QuarantineObject.future = None
    def UnquarantineObject(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Unquarantine an object
      """
      raise NotImplementedError()
    UnquarantineObject.future = None
    def LoadObjectsByPrefix(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Get array of object locations
      """
      raise NotImplementedError()
    LoadObjectsByPrefix.future = None
    def ListVolumes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List Volumes
      """
      raise NotImplementedError()
    ListVolumes.future = None
    def GetVolume(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Get Volume by index
      """
      raise NotImplementedError()
    GetVolume.future = None
    def ListPartitions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List partitions
      """
      raise NotImplementedError()
    ListPartitions.future = None
    def ListPartition(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List suffixes within partition
      """
      raise NotImplementedError()
    ListPartition.future = None
    def ListSuffix(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List object hashes within partition/suffix
      """
      raise NotImplementedError()
    ListSuffix.future = None
    def ListPartitionRecursive(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Recursively list the partition content, down to files
      """
      raise NotImplementedError()
    ListPartitionRecursive.future = None
    def ListQuarantinedOHashes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List quarantined objects. This may be very large, so use a stream (no eventlet)
      """
      raise NotImplementedError()
    def ListQuarantinedOHash(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List files within a quarantined object (ohash)
      """
      raise NotImplementedError()
    ListQuarantinedOHash.future = None
    def LoadObject(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """TBD: define a ListOhash and deprecate LoadObjectsByPrefix

      Get object
      """
      raise NotImplementedError()
    LoadObject.future = None
    def GetNextOffset(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Get next offset to write to in a volume
      """
      raise NotImplementedError()
    GetNextOffset.future = None
    def GetStats(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Get KVStats
      """
      raise NotImplementedError()
    GetStats.future = None
    def LoadObjectsByVolume(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """List objects per volume - used for compaction (no eventlet, ok to use stream)
      """
      raise NotImplementedError()
    def UpdateVolumeState(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Update Volume state
      """
      raise NotImplementedError()
    UpdateVolumeState.future = None
    def SetKvState(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Set state (clean: in sync with the volumes)
      """
      raise NotImplementedError()
    SetKvState.future = None
    def GetKvState(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """Get state (clean: in sync with the volumes)
      """
      raise NotImplementedError()
    GetKvState.future = None


  def beta_create_FileMgr_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('filemgr.FileMgr', 'GetKvState'): Empty.FromString,
      ('filemgr.FileMgr', 'GetNextOffset'): GetNextOffsetInfo.FromString,
      ('filemgr.FileMgr', 'GetStats'): GetStatsInfo.FromString,
      ('filemgr.FileMgr', 'GetVolume'): VolumeIndex.FromString,
      ('filemgr.FileMgr', 'ListPartition'): ListPartitionInfo.FromString,
      ('filemgr.FileMgr', 'ListPartitionRecursive'): ListPartitionInfo.FromString,
      ('filemgr.FileMgr', 'ListPartitions'): ListPartitionsInfo.FromString,
      ('filemgr.FileMgr', 'ListQuarantinedOHash'): ObjectPrefix.FromString,
      ('filemgr.FileMgr', 'ListQuarantinedOHashes'): Empty.FromString,
      ('filemgr.FileMgr', 'ListSuffix'): ListSuffixInfo.FromString,
      ('filemgr.FileMgr', 'ListVolumes'): ListVolumesInfo.FromString,
      ('filemgr.FileMgr', 'LoadObject'): LoadObjectInfo.FromString,
      ('filemgr.FileMgr', 'LoadObjectsByPrefix'): ObjectPrefix.FromString,
      ('filemgr.FileMgr', 'LoadObjectsByVolume'): VolumeIndex.FromString,
      ('filemgr.FileMgr', 'QuarantineDir'): ObjectPrefix.FromString,
      ('filemgr.FileMgr', 'QuarantineObject'): ObjectName.FromString,
      ('filemgr.FileMgr', 'RegisterObject'): NewObjectInfo.FromString,
      ('filemgr.FileMgr', 'RegisterVolume'): NewVolumeInfo.FromString,
      ('filemgr.FileMgr', 'RenameObject'): RenameInfo.FromString,
      ('filemgr.FileMgr', 'SetKvState'): KvState.FromString,
      ('filemgr.FileMgr', 'UnquarantineObject'): ObjectName.FromString,
      ('filemgr.FileMgr', 'UnregisterObject'): ObjectName.FromString,
      ('filemgr.FileMgr', 'UnregisterVolume'): VolumeIndex.FromString,
      ('filemgr.FileMgr', 'UpdateVolumeState'): NewVolumeState.FromString,
    }
    response_serializers = {
      ('filemgr.FileMgr', 'GetKvState'): KvState.SerializeToString,
      ('filemgr.FileMgr', 'GetNextOffset'): VolumeNextOffset.SerializeToString,
      ('filemgr.FileMgr', 'GetStats'): KVStats.SerializeToString,
      ('filemgr.FileMgr', 'GetVolume'): Volume.SerializeToString,
      ('filemgr.FileMgr', 'ListPartition'): DirEntries.SerializeToString,
      ('filemgr.FileMgr', 'ListPartitionRecursive'): PartitionContent.SerializeToString,
      ('filemgr.FileMgr', 'ListPartitions'): DirEntries.SerializeToString,
      ('filemgr.FileMgr', 'ListQuarantinedOHash'): LoadObjectsResponse.SerializeToString,
      ('filemgr.FileMgr', 'ListQuarantinedOHashes'): QuarantinedObjectName.SerializeToString,
      ('filemgr.FileMgr', 'ListSuffix'): DirEntries.SerializeToString,
      ('filemgr.FileMgr', 'ListVolumes'): Volumes.SerializeToString,
      ('filemgr.FileMgr', 'LoadObject'): Object.SerializeToString,
      ('filemgr.FileMgr', 'LoadObjectsByPrefix'): LoadObjectsResponse.SerializeToString,
      ('filemgr.FileMgr', 'LoadObjectsByVolume'): Object.SerializeToString,
      ('filemgr.FileMgr', 'QuarantineDir'): DelObjectReply.SerializeToString,
      ('filemgr.FileMgr', 'QuarantineObject'): Empty.SerializeToString,
      ('filemgr.FileMgr', 'RegisterObject'): NewObjectReply.SerializeToString,
      ('filemgr.FileMgr', 'RegisterVolume'): NewVolumeReply.SerializeToString,
      ('filemgr.FileMgr', 'RenameObject'): RenameReply.SerializeToString,
      ('filemgr.FileMgr', 'SetKvState'): Empty.SerializeToString,
      ('filemgr.FileMgr', 'UnquarantineObject'): Empty.SerializeToString,
      ('filemgr.FileMgr', 'UnregisterObject'): DelObjectReply.SerializeToString,
      ('filemgr.FileMgr', 'UnregisterVolume'): Empty.SerializeToString,
      ('filemgr.FileMgr', 'UpdateVolumeState'): Empty.SerializeToString,
    }
    method_implementations = {
      ('filemgr.FileMgr', 'GetKvState'): face_utilities.unary_unary_inline(servicer.GetKvState),
      ('filemgr.FileMgr', 'GetNextOffset'): face_utilities.unary_unary_inline(servicer.GetNextOffset),
      ('filemgr.FileMgr', 'GetStats'): face_utilities.unary_unary_inline(servicer.GetStats),
      ('filemgr.FileMgr', 'GetVolume'): face_utilities.unary_unary_inline(servicer.GetVolume),
      ('filemgr.FileMgr', 'ListPartition'): face_utilities.unary_unary_inline(servicer.ListPartition),
      ('filemgr.FileMgr', 'ListPartitionRecursive'): face_utilities.unary_unary_inline(servicer.ListPartitionRecursive),
      ('filemgr.FileMgr', 'ListPartitions'): face_utilities.unary_unary_inline(servicer.ListPartitions),
      ('filemgr.FileMgr', 'ListQuarantinedOHash'): face_utilities.unary_unary_inline(servicer.ListQuarantinedOHash),
      ('filemgr.FileMgr', 'ListQuarantinedOHashes'): face_utilities.unary_stream_inline(servicer.ListQuarantinedOHashes),
      ('filemgr.FileMgr', 'ListSuffix'): face_utilities.unary_unary_inline(servicer.ListSuffix),
      ('filemgr.FileMgr', 'ListVolumes'): face_utilities.unary_unary_inline(servicer.ListVolumes),
      ('filemgr.FileMgr', 'LoadObject'): face_utilities.unary_unary_inline(servicer.LoadObject),
      ('filemgr.FileMgr', 'LoadObjectsByPrefix'): face_utilities.unary_unary_inline(servicer.LoadObjectsByPrefix),
      ('filemgr.FileMgr', 'LoadObjectsByVolume'): face_utilities.unary_stream_inline(servicer.LoadObjectsByVolume),
      ('filemgr.FileMgr', 'QuarantineDir'): face_utilities.unary_unary_inline(servicer.QuarantineDir),
      ('filemgr.FileMgr', 'QuarantineObject'): face_utilities.unary_unary_inline(servicer.QuarantineObject),
      ('filemgr.FileMgr', 'RegisterObject'): face_utilities.unary_unary_inline(servicer.RegisterObject),
      ('filemgr.FileMgr', 'RegisterVolume'): face_utilities.unary_unary_inline(servicer.RegisterVolume),
      ('filemgr.FileMgr', 'RenameObject'): face_utilities.unary_unary_inline(servicer.RenameObject),
      ('filemgr.FileMgr', 'SetKvState'): face_utilities.unary_unary_inline(servicer.SetKvState),
      ('filemgr.FileMgr', 'UnquarantineObject'): face_utilities.unary_unary_inline(servicer.UnquarantineObject),
      ('filemgr.FileMgr', 'UnregisterObject'): face_utilities.unary_unary_inline(servicer.UnregisterObject),
      ('filemgr.FileMgr', 'UnregisterVolume'): face_utilities.unary_unary_inline(servicer.UnregisterVolume),
      ('filemgr.FileMgr', 'UpdateVolumeState'): face_utilities.unary_unary_inline(servicer.UpdateVolumeState),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_FileMgr_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('filemgr.FileMgr', 'GetKvState'): Empty.SerializeToString,
      ('filemgr.FileMgr', 'GetNextOffset'): GetNextOffsetInfo.SerializeToString,
      ('filemgr.FileMgr', 'GetStats'): GetStatsInfo.SerializeToString,
      ('filemgr.FileMgr', 'GetVolume'): VolumeIndex.SerializeToString,
      ('filemgr.FileMgr', 'ListPartition'): ListPartitionInfo.SerializeToString,
      ('filemgr.FileMgr', 'ListPartitionRecursive'): ListPartitionInfo.SerializeToString,
      ('filemgr.FileMgr', 'ListPartitions'): ListPartitionsInfo.SerializeToString,
      ('filemgr.FileMgr', 'ListQuarantinedOHash'): ObjectPrefix.SerializeToString,
      ('filemgr.FileMgr', 'ListQuarantinedOHashes'): Empty.SerializeToString,
      ('filemgr.FileMgr', 'ListSuffix'): ListSuffixInfo.SerializeToString,
      ('filemgr.FileMgr', 'ListVolumes'): ListVolumesInfo.SerializeToString,
      ('filemgr.FileMgr', 'LoadObject'): LoadObjectInfo.SerializeToString,
      ('filemgr.FileMgr', 'LoadObjectsByPrefix'): ObjectPrefix.SerializeToString,
      ('filemgr.FileMgr', 'LoadObjectsByVolume'): VolumeIndex.SerializeToString,
      ('filemgr.FileMgr', 'QuarantineDir'): ObjectPrefix.SerializeToString,
      ('filemgr.FileMgr', 'QuarantineObject'): ObjectName.SerializeToString,
      ('filemgr.FileMgr', 'RegisterObject'): NewObjectInfo.SerializeToString,
      ('filemgr.FileMgr', 'RegisterVolume'): NewVolumeInfo.SerializeToString,
      ('filemgr.FileMgr', 'RenameObject'): RenameInfo.SerializeToString,
      ('filemgr.FileMgr', 'SetKvState'): KvState.SerializeToString,
      ('filemgr.FileMgr', 'UnquarantineObject'): ObjectName.SerializeToString,
      ('filemgr.FileMgr', 'UnregisterObject'): ObjectName.SerializeToString,
      ('filemgr.FileMgr', 'UnregisterVolume'): VolumeIndex.SerializeToString,
      ('filemgr.FileMgr', 'UpdateVolumeState'): NewVolumeState.SerializeToString,
    }
    response_deserializers = {
      ('filemgr.FileMgr', 'GetKvState'): KvState.FromString,
      ('filemgr.FileMgr', 'GetNextOffset'): VolumeNextOffset.FromString,
      ('filemgr.FileMgr', 'GetStats'): KVStats.FromString,
      ('filemgr.FileMgr', 'GetVolume'): Volume.FromString,
      ('filemgr.FileMgr', 'ListPartition'): DirEntries.FromString,
      ('filemgr.FileMgr', 'ListPartitionRecursive'): PartitionContent.FromString,
      ('filemgr.FileMgr', 'ListPartitions'): DirEntries.FromString,
      ('filemgr.FileMgr', 'ListQuarantinedOHash'): LoadObjectsResponse.FromString,
      ('filemgr.FileMgr', 'ListQuarantinedOHashes'): QuarantinedObjectName.FromString,
      ('filemgr.FileMgr', 'ListSuffix'): DirEntries.FromString,
      ('filemgr.FileMgr', 'ListVolumes'): Volumes.FromString,
      ('filemgr.FileMgr', 'LoadObject'): Object.FromString,
      ('filemgr.FileMgr', 'LoadObjectsByPrefix'): LoadObjectsResponse.FromString,
      ('filemgr.FileMgr', 'LoadObjectsByVolume'): Object.FromString,
      ('filemgr.FileMgr', 'QuarantineDir'): DelObjectReply.FromString,
      ('filemgr.FileMgr', 'QuarantineObject'): Empty.FromString,
      ('filemgr.FileMgr', 'RegisterObject'): NewObjectReply.FromString,
      ('filemgr.FileMgr', 'RegisterVolume'): NewVolumeReply.FromString,
      ('filemgr.FileMgr', 'RenameObject'): RenameReply.FromString,
      ('filemgr.FileMgr', 'SetKvState'): Empty.FromString,
      ('filemgr.FileMgr', 'UnquarantineObject'): Empty.FromString,
      ('filemgr.FileMgr', 'UnregisterObject'): DelObjectReply.FromString,
      ('filemgr.FileMgr', 'UnregisterVolume'): Empty.FromString,
      ('filemgr.FileMgr', 'UpdateVolumeState'): Empty.FromString,
    }
    cardinalities = {
      'GetKvState': cardinality.Cardinality.UNARY_UNARY,
      'GetNextOffset': cardinality.Cardinality.UNARY_UNARY,
      'GetStats': cardinality.Cardinality.UNARY_UNARY,
      'GetVolume': cardinality.Cardinality.UNARY_UNARY,
      'ListPartition': cardinality.Cardinality.UNARY_UNARY,
      'ListPartitionRecursive': cardinality.Cardinality.UNARY_UNARY,
      'ListPartitions': cardinality.Cardinality.UNARY_UNARY,
      'ListQuarantinedOHash': cardinality.Cardinality.UNARY_UNARY,
      'ListQuarantinedOHashes': cardinality.Cardinality.UNARY_STREAM,
      'ListSuffix': cardinality.Cardinality.UNARY_UNARY,
      'ListVolumes': cardinality.Cardinality.UNARY_UNARY,
      'LoadObject': cardinality.Cardinality.UNARY_UNARY,
      'LoadObjectsByPrefix': cardinality.Cardinality.UNARY_UNARY,
      'LoadObjectsByVolume': cardinality.Cardinality.UNARY_STREAM,
      'QuarantineDir': cardinality.Cardinality.UNARY_UNARY,
      'QuarantineObject': cardinality.Cardinality.UNARY_UNARY,
      'RegisterObject': cardinality.Cardinality.UNARY_UNARY,
      'RegisterVolume': cardinality.Cardinality.UNARY_UNARY,
      'RenameObject': cardinality.Cardinality.UNARY_UNARY,
      'SetKvState': cardinality.Cardinality.UNARY_UNARY,
      'UnquarantineObject': cardinality.Cardinality.UNARY_UNARY,
      'UnregisterObject': cardinality.Cardinality.UNARY_UNARY,
      'UnregisterVolume': cardinality.Cardinality.UNARY_UNARY,
      'UpdateVolumeState': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'filemgr.FileMgr', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
